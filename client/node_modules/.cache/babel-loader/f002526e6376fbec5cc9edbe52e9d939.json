{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Amanda\\\\Documents\\\\Projects\\\\contact-keeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Amanda\\\\Documents\\\\Projects\\\\contact-keeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Amanda\\\\Documents\\\\Projects\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react'; //use effect mimicks lifecycle method compDidMount\n\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext); //need function to add contact\n\n  const addContact = contactContext.addContact,\n        current = contactContext.current,\n        clearCurrent = contactContext.clearCurrent,\n        updateContact = contactContext.updateContact;\n  useEffect(() => {\n    if (current != null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]); //dependencies\n\n  const _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"phone\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), ' ', \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), ' ', \"Professional\", ' ', React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : 'Add Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/Amanda/Documents/Projects/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'; //use effect mimicks lifecycle method compDidMount\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext); //need function to add contact\r\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n\r\n  useEffect(() => {\r\n    if (current != null) {\r\n      setContact(current);\r\n    } else {\r\n      setContact({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        type: 'personal'\r\n      });\r\n    }\r\n  }, [contactContext, current]); //dependencies\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    type: 'personal'\r\n  });\r\n\r\n  const { name, email, phone, type } = contact;\r\n  const onChange = e =>\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (current === null) {\r\n      addContact(contact);\r\n    } else {\r\n      updateContact(contact);\r\n    }\r\n    clearAll();\r\n  };\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className='text-primary'>\r\n        {current ? 'Edit Contact' : 'Add Contact'}\r\n      </h2>\r\n      <input\r\n        type='text'\r\n        placeholder='Name'\r\n        name='name'\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type='email'\r\n        placeholder='Email'\r\n        name='email'\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type='phone'\r\n        placeholder='Phone'\r\n        name='phone'\r\n        value={phone}\r\n        onChange={onChange}\r\n      />\r\n      <h5>Contact Type</h5>\r\n      <input\r\n        type='radio'\r\n        name='type'\r\n        value='personal'\r\n        checked={type === 'personal'}\r\n        onChange={onChange}\r\n      />{' '}\r\n      Personal{' '}\r\n      <input\r\n        type='radio'\r\n        name='type'\r\n        value='professional'\r\n        checked={type === 'professional'}\r\n        onChange={onChange}\r\n      />{' '}\r\n      Professional{' '}\r\n      <div>\r\n        <input\r\n          type='submit'\r\n          value={current ? 'Update Contact' : 'Add Contact'}\r\n          className='btn btn-primary btn-block'\r\n        />\r\n      </div>\r\n      {current && (\r\n        <div>\r\n          <button className='btn btn-light btn-block' onClick={clearAll}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}